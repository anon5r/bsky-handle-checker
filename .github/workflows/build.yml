name: Build Multi-Platform Docker Image

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ${{ vars.REGISTRY_URL }}
      IMAGE_NAME: bsky-handle-checker

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set Docker tags
        id: meta
        run: |
          GHCR_TAG="ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}"
          PRIVATE_TAG="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}"

          TAGS="$GHCR_TAG,$PRIVATE_TAG"

          if [[ "${{ github.ref_name }}" == "main" ]]; then
            TAGS="$TAGS,ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}:latest"
            TAGS="$TAGS,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          fi

          echo "tags=$TAGS" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Private Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Set labels
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.authors=${{ github.repository_owner }}
            org.opencontainers.image.title=${{ github.repository }}
            org.opencontainers.image.description='Bluesky handle checker'
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}/blob/${{ github.sha }}/Dockerfile
            org.opencontainers.image.version=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=MIT

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.tags }}
          labels: ${{ steps.meta.outputs.labels }}
